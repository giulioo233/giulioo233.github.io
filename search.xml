<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CS1226F</title>
      <link href="/2023/04/09/CS1226F/"/>
      <url>/2023/04/09/CS1226F/</url>
      
        <content type="html"><![CDATA[<h2 id="回顾目标-Goal"><a href="#回顾目标-Goal" class="headerlink" title="回顾目标 Goal"></a><strong>回顾目标 Goal</strong></h2><blockquote><ul><li>个人目标:将C#实现的telnet功能移植到CS1226F项目当中</li><li>项目目标:<br>用telnet对交换机进行配置，实现千兆百兆分站式的打流测试</li></ul></blockquote><h2 id="一、Telnet功能"><a href="#一、Telnet功能" class="headerlink" title="一、Telnet功能"></a><strong>一、Telnet功能</strong></h2><ul><li>Telnet是teletype network的缩写。Telnet协议是TCP/IP协议族中的一员，是Internet远程登录服务的标准协议和主要方式。它为用户提供了在本地计算机上完成主机工作的能力，在终端使用者的电脑上使用 telnet 程序，用它连接到服务器。</li><li>终端使用者可以在 telnet 程序中输入命令，这些命令会在服务器上运行，就像直接在服务器控制台上输入一样，可以在本地就能控制服务器，要开始一个 telnet 会话，必须输入用户名和密码类登录服务器，Telnet 是常用的远程控制 Web 服务器的方法。</li><li>使用 Telnet 协议进行远程登录需要满足以下条件：</li></ul><p>1.在本地计算机上必须安装 Telnet 协议的客户端程序<br>2.必须知道远程主机的 ip 地址或域名<br>3.必须知道登录标识符和口令</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35559460/1680748594351-ace214f8-71a1-4d4e-a2df-a20753c1bb62.png#averageHue=%23f4f2ef&clientId=u7b87c0b9-f8fa-4&from=paste&height=301&id=u2c9fbcdf&name=image.png&originHeight=301&originWidth=489&originalType=url&ratio=1&rotation=0&showTitle=false&size=96648&status=done&style=none&taskId=u266fdb8e-2140-45ed-b094-e5223a4eaff&title=&width=489" alt="image.png"></p><h3 id="1-telnet类"><a href="#1-telnet类" class="headerlink" title="1.telnet类"></a><strong>1.telnet类</strong></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Telnet</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Telnet</span>(<span class="params"><span class="built_in">string</span> Address, <span class="built_in">int</span> Port</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">address = Address;<span class="comment">//地址</span></span><br><span class="line">port = Port;<span class="comment">//端口号：23</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//连接telnet</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Connect</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">IPAddress import = IPAddress.Parse(address);</span><br><span class="line">iep = <span class="keyword">new</span> IPEndPoint(import, port);</span><br><span class="line">s = <span class="keyword">new</span> Socket(AddressFamily.InterNetwork, SocketType.Stream, ProtocolType.Tcp);</span><br><span class="line">s.Connect(iep);</span><br><span class="line">s.BeginReceive(m_byBuff, <span class="number">0</span>, m_byBuff.Length, <span class="number">0</span>, RecievedData, s);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//接收的字符串，以及发送的字符串</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">SendWaitFor</span>(<span class="params"><span class="built_in">string</span> DataToWaitFor, <span class="built_in">string</span> send, <span class="built_in">int</span> Timeout</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> ct = <span class="number">0</span>; ct &lt;= Timeout * <span class="number">100</span>; ct++)</span><br><span class="line">&#123;</span><br><span class="line">Thread.Sleep(<span class="number">10</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (strWorkingDataX.ToLower().IndexOf(DataToWaitFor.ToLower()) != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">DispatchMessage(send);</span><br><span class="line">DispatchMessage(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">WorkingDatas = strWorkingDataX;</span><br><span class="line">strWorkingDataX = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">WorkingDatas = strWorkingDataX;</span><br><span class="line">strWorkingDataX = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//匹配字符串</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">DispatchMessage</span>(<span class="params"><span class="built_in">string</span> strText</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                Byte[] smk = <span class="keyword">new</span> Byte[strText.Length];</span><br><span class="line">                smk = System.Text.Encoding.Default.GetBytes(strText);</span><br><span class="line">                s.BeginSend(smk, <span class="number">0</span>, smk.Length, <span class="number">0</span>, SendData, s);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ers)</span><br><span class="line">            &#123;</span><br><span class="line">                errormessage = <span class="string">&quot;出错了,在回发数据的时候:&quot;</span> + ers.Message;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="调用1：telnet的收发函数"><a href="#调用1：telnet的收发函数" class="headerlink" title="调用1：telnet的收发函数"></a><strong>调用1：telnet的收发函数</strong></h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="built_in">bool</span> <span class="title">Telnet_Send</span>(<span class="params"><span class="built_in">string</span> waitfor, <span class="built_in">string</span> send, <span class="built_in">int</span> time</span>)</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">this</span>.Invoke((EventHandler)(<span class="built_in">delegate</span></span><br><span class="line">                &#123;</span><br><span class="line">                &#125;));</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (!P_telnet.SendWaitFor(waitfor, send, time))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (method1 == <span class="literal">null</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">this</span>.Invoke((EventHandler)(<span class="built_in">delegate</span></span><br><span class="line">                        &#123;</span><br><span class="line">                        &#125;));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (method1 == <span class="literal">null</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">this</span>.Invoke((EventHandler)(<span class="built_in">delegate</span></span><br><span class="line">                    &#123;</span><br><span class="line">                    &#125;));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ry)</span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h4 id="调用2：用于登入telnet"><a href="#调用2：用于登入telnet" class="headerlink" title="调用2：用于登入telnet"></a><strong>调用2：用于登入telnet</strong></h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//设置telnet的地址和端口号</span></span><br><span class="line"><span class="keyword">public</span> Telnets.Telnet P_telnet = <span class="keyword">new</span> Telnets.Telnet(<span class="string">&quot;192.168.2.1&quot;</span>, <span class="number">23</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//telnet的连接</span></span><br><span class="line"><span class="keyword">if</span> (!P_telnet.Connect())</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;Telnet连接失败！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当接收到&quot;Username:&quot;,发送&quot;admin&quot;</span></span><br><span class="line"><span class="keyword">if</span> (!Telnet_Send(<span class="string">&quot;Username:&quot;</span>, <span class="string">&quot;admin&quot;</span>, <span class="number">10</span>))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;登陆失败！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当接收到&quot;Password:&quot;,发送&quot;system&quot;</span></span><br><span class="line"><span class="keyword">if</span> (!Telnet_Send(<span class="string">&quot;Password:&quot;</span>, <span class="string">&quot;system&quot;</span>, <span class="number">10</span>))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;用户名错误！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!Telnet_Send(<span class="string">&quot;#&quot;</span>, <span class="string">&quot;cd /tmp&quot;</span>, <span class="number">10</span>))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;密码错误！&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//当接收到&quot;#&quot;(每台设备不同),发送指令</span></span><br><span class="line"><span class="keyword">if</span> (!Telnet_Send(<span class="string">&quot;#&quot;</span>, <span class="string">&quot;port 1 set ability 0 1 0 1 0&quot;</span>, <span class="number">10</span>))</span><br><span class="line">&#123;</span><br><span class="line">MessageBox.Show(<span class="string">&quot;指令有误&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="CS1226F的指令集"><a href="#CS1226F的指令集" class="headerlink" title="CS1226F的指令集"></a>CS1226F的指令集</h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//虚拟局域网的划分</span></span><br><span class="line">vlan <span class="keyword">set</span> <span class="number">1</span> <span class="number">0x4000001</span> <span class="number">0x4000001</span></span><br><span class="line">vlan port <span class="number">0</span> <span class="keyword">set</span> pvid <span class="number">1</span></span><br><span class="line">vlan port <span class="number">26</span> <span class="keyword">set</span> pvid <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//千兆百兆配置</span></span><br><span class="line">port <span class="number">8</span> <span class="keyword">set</span> ability <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span><span class="comment">//百兆</span></span><br><span class="line">port <span class="number">8</span> <span class="keyword">set</span> ability <span class="number">0</span> <span class="number">0</span> <span class="number">1</span> <span class="number">1</span> <span class="number">0</span><span class="comment">//千兆</span></span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">0</span> <span class="number">1</span> <span class="number">0</span> </span><br><span class="line"><span class="number">0</span>- 强制，<span class="number">1</span>自动协商</span><br><span class="line"><span class="number">1</span><span class="number">-100</span>M enable</span><br><span class="line"><span class="number">0</span><span class="number">-1000</span> M disable</span><br><span class="line"><span class="number">1</span>- duplex</span><br><span class="line"><span class="number">0</span>- 流控关闭</span><br></pre></td></tr></table></figure><h3 id="2-常见问题"><a href="#2-常见问题" class="headerlink" title="2.常见问题"></a><strong>2.常见问题</strong></h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a><strong>问题</strong></h4><blockquote><ol><li>在运行过程中，出现”指令错误”、”用户名错误”的问题</li></ol></blockquote><blockquote><ol start="2"><li>在运行过程中，出现”Telnet连接失败！”的问题</li></ol></blockquote><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a><strong>解决方案</strong></h4><blockquote><ol><li>运行过程中，上述问题的出现，可能是因为设备网络形成了回路。<br>解决方法：重启设备，或者拔掉除了PC端的其余网线，再重新进行测试。</li></ol></blockquote><blockquote><ol start="2"><li>在同一窗口下，一台本地机同一时间内只能与一台远程主机建立连接，这是Telnet的一个特性。<br>解决方法：检查是否有其他地方启动并连接了telnet，尤其是命令提示符，并关闭相应的窗口。</li></ol></blockquote><h2 id="二、执行过程"><a href="#二、执行过程" class="headerlink" title="二、执行过程"></a><strong>二、执行过程</strong></h2><h3 id="1-测试前工作准备"><a href="#1-测试前工作准备" class="headerlink" title="1.测试前工作准备"></a><strong>1.测试前工作准备</strong></h3><p>产测电脑需要三网卡：<br>    1)第一个网卡连接局域网，设为动态获取IP<br>    2)第二个网卡连接待测交换机的端口1，设为静态IP:192.168.2.100；<br>    3)第三个网卡连接PTS打流仪的GE口，设为静态IP:192.168.10.100；<br>待测设备和PTS上电，启动完成后，验证产测电脑是否可以ping通：192.168.2.1和192.168.10.11，ping通后再做打流测试</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35559460/1680749160772-fa40a968-5ba3-429a-8dc5-5b61b3215344.png#averageHue=%23f6f6f6&clientId=u7b87c0b9-f8fa-4&from=ui&id=u2fe5d6d2&name=%E5%9B%BE%E7%89%871.png&originHeight=279&originWidth=491&originalType=binary&ratio=1&rotation=0&showTitle=false&size=549196&status=done&style=none&taskId=uf6e2e40c-b1d5-41e6-9adc-86d2e26bf45&title=" alt="图片1.png"></p><p>CS1226F是无管理型交换机，没有串口，测试时需要电脑网线先连接到待测交换机端口1上，其余端口不插线，为避免形成网络回路。</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35559460/1680849031780-0369139b-0f68-46a6-a9ca-1ff243597384.png#averageHue=%238c8771&clientId=u932a5e71-04f8-4&from=ui&height=705&id=ua1380f66&name=%E5%9B%BE%E7%89%871.png&originHeight=858&originWidth=1338&originalType=binary&ratio=1&rotation=0&showTitle=false&size=4600378&status=done&style=none&taskId=uf440f5a3-b519-41b8-b9c1-28a36e821d0&title=&width=1099" alt="图片1.png"><br><img src="https://cdn.nlark.com/yuque/0/2023/png/35559460/1680749160662-df9be27b-d34c-4fff-99cf-c33d4eed3647.png#averageHue=%23f7f7f7&clientId=u7b87c0b9-f8fa-4&from=ui&id=u8d47a786&name=%E5%9B%BE%E7%89%872.png&originHeight=538&originWidth=1302&originalType=binary&ratio=1&rotation=0&showTitle=false&size=49401&status=done&style=none&taskId=ucb78da24-93bf-47c4-a5fe-5581345e540&title=" alt="图片2.png"></p><h3 id="2-开始测试"><a href="#2-开始测试" class="headerlink" title="2.开始测试"></a><strong>2.开始测试</strong></h3><h4 id="千兆打流配置"><a href="#千兆打流配置" class="headerlink" title="千兆打流配置"></a><strong>千兆打流配置</strong></h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">TextBox1_TextFinished</span>(<span class="params"><span class="built_in">object</span> sender, EventArgs e</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//当SN输入到指定位数时，开始执行</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">this</span>.textBox_SN1.MaxLength &lt;= <span class="keyword">this</span>.textBox_SN1.Text.Trim().Length)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> sn = textBox_SN1.Text.Trim();</span><br><span class="line"><span class="keyword">if</span> (!SetUUTConfig_One(<span class="number">0</span>, textBox_SN1.Text.Trim()))</span><br><span class="line">&#123;</span><br><span class="line">FailExit_1();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//初始化后按钮状态改变</span></span><br><span class="line">textBox_SN1.Enabled = <span class="literal">false</span>;</span><br><span class="line">button_starttest1.BackColor = SystemColors.ActiveBorder;</span><br><span class="line"><span class="keyword">this</span>.button_starttest1.Focus();</span><br><span class="line">button_starttest1.Text = <span class="built_in">string</span>.Format(<span class="string">&quot;开始测试&#123;0&#125;!&quot;</span>, UUTNumber1);</span><br><span class="line">button_starttest1.BackColor = Color.Blue;</span><br><span class="line">button_starttest1.Enabled = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">SetUUTConfig_One</span>(<span class="params"><span class="built_in">int</span> i, <span class="built_in">string</span> strSN</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> SNCount = Common.TestUnitList.Count;</span><br><span class="line"><span class="built_in">string</span> strTip = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="built_in">int</span> iUUTName;<span class="comment">//设备号</span></span><br><span class="line">Device TmpUUT = <span class="keyword">new</span> Device();</span><br><span class="line"><span class="keyword">if</span> (Common.Portlist.Min() == <span class="number">7</span>)<span class="comment">//当使用的端口号为7-12时</span></span><br><span class="line">&#123;</span><br><span class="line">TmpUUT.iPort = i * <span class="number">2</span> + <span class="number">7</span>;</span><br><span class="line">iUUTName = i + <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">TmpUUT.iPort = i * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">iUUTName = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">TmpUUT.strSN = strSN;</span><br><span class="line"><span class="keyword">if</span> (Common.TestUnitList.Count == <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">Common.TestUnitList.Insert(i, TmpUUT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; Common.TestUnitList.Count; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Common.TestUnitList[j].iPort == TmpUUT.iPort)</span><br><span class="line">Common.TestUnitList.RemoveAt(j);</span><br><span class="line">&#125;</span><br><span class="line">Common.TestUnitList.Add(TmpUUT);</span><br><span class="line">&#125;</span><br><span class="line">Common.gbIsOK = <span class="literal">false</span>;</span><br><span class="line">Common.gbERROR = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (!SetConfig(<span class="keyword">out</span> strErrorInfo))<span class="comment">//telnet配置指令的函数</span></span><br><span class="line">&#123;</span><br><span class="line">Common.gbERROR = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Common.gbIsOK = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="千兆打流测试"><a href="#千兆打流测试" class="headerlink" title="千兆打流测试"></a><strong>千兆打流测试</strong></h4><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Dobutton_starttest1_Click</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">int</span> iUUT = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">string</span> tmpResult = <span class="string">&quot;FAIL&quot;</span>; </span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">SetLotSNConfigSave1();</span><br><span class="line"><span class="built_in">int</span> iPort;</span><br><span class="line"><span class="comment">//获取端口号和设备号</span></span><br><span class="line"><span class="keyword">if</span> (Common.Portlist.Min() == <span class="number">7</span>)</span><br><span class="line">&#123;</span><br><span class="line">iPort = <span class="number">7</span>;</span><br><span class="line">iUUT = <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">iPort = <span class="number">1</span>;</span><br><span class="line">iUUT = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">button_starttest1.BackColor = SystemColors.ActiveBorder;</span><br><span class="line"><span class="comment">//千兆打流测试</span></span><br><span class="line"><span class="keyword">if</span> (!Getest_1(iUUT, iPort, <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//打流测试结果</span></span><br><span class="line"><span class="keyword">if</span> (Common.Getestlist[iUUT - <span class="number">1</span>] == <span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打流成功</span></span><br><span class="line"><span class="keyword">this</span>.Result1 = <span class="string">&quot;PASS&quot;</span>;</span><br><span class="line">SuccessExit_1();</span><br><span class="line">MessageBox.Show(<span class="built_in">string</span>.Format(<span class="string">&quot;待测设备&#123;0&#125;：千兆打流----------&#123;1&#125;\n&quot;</span>, iUUT, (Common.Getestlist[iUUT - <span class="number">1</span>] ? <span class="string">&quot;PASS&quot;</span> : <span class="string">&quot;FAIL&quot;</span>)), <span class="string">&quot;被测设备&quot;</span> + iUUT);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//打流失败</span></span><br><span class="line"><span class="keyword">this</span>.Result1 = <span class="string">&quot;FAIL&quot;</span>;</span><br><span class="line">FailExit_1();</span><br><span class="line">MessageBox.Show(<span class="built_in">string</span>.Format(<span class="string">&quot;待测设备&#123;0&#125;：千兆打流----------&#123;1&#125;\n&quot;</span>, iUUT, (Common.Getestlist[iUUT - <span class="number">1</span>] ? <span class="string">&quot;PASS&quot;</span> : <span class="string">&quot;FAIL&quot;</span>)), <span class="string">&quot;被测设备&quot;</span> + iUUT);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span></span><br><span class="line">&#123;</span><br><span class="line">Common.Getestlist[iUUT - <span class="number">1</span>] = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">string</span> file = System.Windows.Forms.Application.ExecutablePath;</span><br><span class="line">Configuration config = ConfigurationManager.OpenExeConfiguration(file);</span><br><span class="line">config.AppSettings.Settings[<span class="string">&quot;Result1&quot;</span>].Value = tmpResult;</span><br><span class="line">config.Save(ConfigurationSaveMode.Modified);</span><br><span class="line">ConfigurationManager.RefreshSection(<span class="string">&quot;appSettings&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="三、重要功能的实现"><a href="#三、重要功能的实现" class="headerlink" title="三、重要功能的实现"></a><strong>三、重要功能的实现</strong></h2><h3 id="1-从配置文件中获取设备信息"><a href="#1-从配置文件中获取设备信息" class="headerlink" title="1.从配置文件中获取设备信息"></a><strong>1.从配置文件中获取设备信息</strong></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="built_in">bool</span> <span class="title">GetBaseInfo</span>(<span class="params"><span class="built_in">string</span> strEnvironment, <span class="built_in">string</span> strFilename, <span class="keyword">out</span> <span class="built_in">string</span> strError</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">XmlUtility xmlUnit = <span class="keyword">new</span> XmlUtility(<span class="built_in">string</span>.Format(<span class="string">&quot;.\\Config\\&#123;0&#125;&quot;</span>, strFilename));</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取密码提示符</span></span><br><span class="line">Common.g_strPassWordEcho = xmlUnit.GetXmlNodeValue(<span class="built_in">string</span>.Format(<span class="string">&quot;Paras/Common[@Type=\&quot;&#123;0&#125;\&quot;]/PassWordEcho&quot;</span>, strEnvironment));</span><br><span class="line"><span class="comment">//获取登录提示符</span></span><br><span class="line">Common.g_strLoginEcho = xmlUnit.GetXmlNodeValue(<span class="built_in">string</span>.Format(<span class="string">&quot;Paras/Common[@Type=\&quot;&#123;0&#125;\&quot;]/LoginEcho&quot;</span>, strEnvironment));</span><br><span class="line"></span><br><span class="line">Common.g_iDiffFramesPara = <span class="built_in">ulong</span>.Parse(strtmpvalue);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-生成日志"><a href="#2-生成日志" class="headerlink" title="2.生成日志"></a><strong>2.生成日志</strong></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">SaveLog</span>(<span class="params"><span class="built_in">string</span> strSN, <span class="built_in">string</span> msg</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> logPath = <span class="string">&quot;.\\logFile&quot;</span> + <span class="string">&quot;\\&quot;</span> + Common.g_site;<span class="comment">//文件路径</span></span><br><span class="line"><span class="built_in">string</span> logFileName = logPath + <span class="string">&quot;\\&quot;</span> + strSN + <span class="string">&quot;_&quot;</span> + DateTime.Now.ToString(<span class="string">&quot;yyyyMMdd&quot;</span>) + <span class="string">&quot;.txt&quot;</span>;<span class="comment">//生成的文件名</span></span><br><span class="line"><span class="keyword">if</span> (!Directory.Exists(logPath))</span><br><span class="line">&#123;</span><br><span class="line">Directory.CreateDirectory(logPath);</span><br><span class="line">&#125;</span><br><span class="line">DirectoryInfo dir = <span class="keyword">new</span> DirectoryInfo(logPath);</span><br><span class="line">FileInfo[] _files = dir.GetFiles();</span><br><span class="line">Encoding logFileEncoding = Encoding.UTF8;</span><br><span class="line"><span class="built_in">bool</span> IsAppend = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (File.Exists(logFileName))</span><br><span class="line">&#123;</span><br><span class="line">FileInfo f = <span class="keyword">new</span> FileInfo(logFileName);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">using</span> (StreamWriter sw = <span class="keyword">new</span> StreamWriter(logFileName, IsAppend, logFileEncoding))</span><br><span class="line">&#123;</span><br><span class="line">sw.WriteLine(DateTime.Now.ToString(<span class="string">&quot;yyyy-MM-dd HH:mm:ss: &quot;</span>) + msg);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span></span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-退出功能"><a href="#3-退出功能" class="headerlink" title="3.退出功能"></a><strong>3.退出功能</strong></h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试失败时</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FailExit_1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Result1 = <span class="string">&quot;FAIL&quot;</span>;</span><br><span class="line">button_starttest1.Text = <span class="string">&quot;测试失败!&quot;</span>;</span><br><span class="line">button_starttest1.BackColor = Color.Red;</span><br><span class="line">button_starttest1.Enabled = <span class="literal">false</span>;</span><br><span class="line">textBox_Info1.Text = <span class="built_in">string</span>.Empty;</span><br><span class="line">textBox_SN1.Text = <span class="built_in">string</span>.Empty;</span><br><span class="line">textBox_SN1.Enabled = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试成功时</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">SuccessExit_1</span>()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.Result1 = <span class="string">&quot;PASS&quot;</span>;</span><br><span class="line">button_starttest1.Text = <span class="string">&quot;测试成功!&quot;</span>;</span><br><span class="line">button_starttest1.BackColor = Color.Green;</span><br><span class="line">button_starttest1.Enabled = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">this</span>.textBox_Info1.Text = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.textBox_SN1.Text = <span class="built_in">string</span>.Empty;</span><br><span class="line"><span class="keyword">this</span>.textBox_SN1.Enabled = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 编程开发 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>2022年终总结</title>
      <link href="/2023/01/05/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/"/>
      <url>/2023/01/05/2022%E5%B9%B4%E7%BB%88%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试。" data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="668edc646cf2daf2588fe22eefbe320790e3c7a9134b8f9444a62450543cd1bb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">请输入密码</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 年终总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>照片</title>
      <link href="/Gallery/index.html"/>
      <url>/Gallery/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>发牢骚专区</title>
      <link href="/shuoshuo/index.html"/>
      <url>/shuoshuo/index.html</url>
      
        <content type="html"><![CDATA[<script type="text/javascript" src="https://unpkg.com/artitalk"></script><!-- 存放说说的容器 --><div id="artitalk_main"></div><script>new Artitalk({    appId: '6MDAke4f1KihuGEy0o2a8qxM-MdYXbMMI', // Your LeanCloud appId    appKey: 'qvRNTWsjLR1ACcdgrtBewsAR', // Your LeanCloud appKey    pageSize: 4})</script>]]></content>
      
    </entry>
    
    
  
</search>
